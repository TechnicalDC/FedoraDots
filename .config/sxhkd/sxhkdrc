#  _______         __     __       __ 
# |     __|.--.--.|  |--.|  |--.--|  |
# |__     ||_   _||     ||    <|  _  |
# |_______||__.__||__|__||__|__|_____|

# APPLICATION KEY BINDINGS  {{{

# launch terminal
super + Return
	st

# launch terminal with tmux
super + shift + Return
	st -e tmux -u

# launch rofi
super + {d,w,r}
	rofi -show {drun,window,run}

# launch qutebrowser
super + alt + q
	./.scripts/rofi-quickmarks.sh

# launch neovim
super + alt + n
	st -e 'nvim'

# launch calcurse
super + alt + c
	st -e 'calcurse'

# launch neomutt
super + alt + m
	st -e "neomutt"

# launch ranger
super + alt + r
	st -e 'ranger'

# launch telegram tui (arigram)
super + alt + t
	st -e 'arigram'

# launch config file menu
super + e
	./.scripts/rofi-configmenu.sh

# scrot
Print
	maim ~/Pictures/screenshots/maim_$(date +%d%m%Y_%H%M%S).png && dunstify -a 'Scrot' 'Screenshot saved.' -i '~/Pictures/Scrot/$1' -t 2000

# scrot menu
shift + Print
	./.scripts/rofi-maim

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# power menu
super + shift + q
	./.scripts/rofi-powermenu.sh

# Rofi MPC
super + {F1,F2,F3}
	{./.scripts/rofi-mpc, ./.scripts/wally, ./.scripts/rofi-recorder}

# Change brightness
super + Next
	./.scripts/lightctl dec 0.1

super + Prior
	./.scripts/lightctl inc 0.1

# }}}

# BSPWM HOTKEYS	   {{{

# restart bspwm
super + shift + r
	bspc wm -r

# lock bspwm
#super + space
#	betterlockscreen -l blur

# close and kill
super + q
	bspc node -c

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + shift + s
	bspc node -s biggest.window.local

super + {_,shift +}z
	bspc config window_gap {10,20}

# }}}

# STATE / FLAGS {{{

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {v,l,s,p}
	bspc node -g {marked,locked,sticky,private}

# }}}

# FOCUS / SWAP {{{

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus/send to the next/previous desktop in the current monitor
super + {_,shift + }bracket{left,right}
	bspc {desktop -f,node -d} {prev,next}.local

# focus the last node/desktop
super + {Tab,grave}
	bspc {desktop,node} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# }}}

# PRESELECTION {{{

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# }}}

# MOVE / RESIZE {{{

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# }}}
